<?xml version="1.0" encoding="UTF-8"?>
<!--

    JBoss, Home of Professional Open Source.
    Copyright 2014 Red Hat, Inc., and individual contributors
    as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.jboss.pnc</groupId>
  <artifactId>parent</artifactId>
  <version>0.8-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>pnc</name>
  <url>https://github.com/project-ncl</url>
  <inceptionYear>2014</inceptionYear>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <distribution>repo</distribution>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/project-ncl/pnc.git</connection>
    <developerConnection>scm:git:git@github.com:project-ncl/pnc.git</developerConnection>
    <url>https://github.com/project-ncl/pnc/</url>
    <tag>HEAD</tag>
  </scm>

  <modules>
    <module>test-common</module>
    <module>test-arquillian-container</module>
    <module>common</module>
    <module>moduleconfig</module>
    <module>auth</module>
    <module>datastore</module>
    <module>ear-package</module>
    <module>jenkins-build-driver</module>
    <module>termd-build-driver</module>
    <module>maven-repository-manager</module>
    <module>build-coordinator</module>
    <module>model</module>
    <module>rest</module>
    <module>spi</module>
    <module>ui</module>
    <module>web</module>
    <module>processes</module>
    <module>docker-environment-driver</module>
    <module>openshift-environment-driver</module>
    <module>demo-data</module>
    <module>integration-test</module>
  </modules>

  <properties>
    <!-- minimum jdk and maven versions -->
    <jdk.min.version>1.8</jdk.min.version>
    <maven.min.version>3.2</maven.min.version>
    <atlasVersion>0.15.0</atlasVersion>
    <aproxVersion>0.25.0</aproxVersion>
    <version.jboss.maven.plugin>7.5.Final</version.jboss.maven.plugin>
    <version.jboss.bom>1.0.7.Final</version.jboss.bom>
    <version.junit>4.11</version.junit>
    <version.assertj-core>1.7.0</version.assertj-core>
    <version.mockito-all>1.10.8</version.mockito-all>
    <version.catch-exception>1.2.0</version.catch-exception>
    <version.guava>17.0</version.guava>
    <version.org.apache.httpcomponents.httpclient>4.3.6</version.org.apache.httpcomponents.httpclient>
    <version.org.apache.httpcomponents.httpcore>4.3.3</version.org.apache.httpcomponents.httpcore>
    <version.org.postgresql>9.3-1102-jdbc41</version.org.postgresql>
    <version.org.jboss.logging>3.1.0.GA</version.org.jboss.logging>
    <version.org.json>20141113</version.org.json>
    <version.jackson>2.4.4</version.jackson>
    <version.jackson.annotations>2.4.1</version.jackson.annotations>
    <version.jclouds>1.8.1</version.jclouds>
    <version.jbpm>6.2.0.Final</version.jbpm>
    <version.kie-services-client>6.2.0.Final</version.kie-services-client>
    <version.keycloak>1.2.0.Final</version.keycloak>
    <version.hibernate-jpamodelgen>4.3.4.Final</version.hibernate-jpamodelgen>
    <version.undertow-websockets-jsr>1.2.6.Final</version.undertow-websockets-jsr>

    <datetime>${timestamp}</datetime>
    <pushChanges>true</pushChanges>

    <!-- maven-compiler-plugin -->
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.compiler.source>1.8</maven.compiler.source>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <illegaltransitivereportonly>false</illegaltransitivereportonly>

    <!-- Default DB for NCL is HSQLDB -->
    <persistence.jta-data-source>java:jboss/datasources/NewcastleTestDS</persistence.jta-data-source>
    <persistence.hibernate.dialect>org.hibernate.dialect.HSQLDialect</persistence.hibernate.dialect>
    <persistence.hibernate.hbm2ddl.auto>create-drop</persistence.hibernate.hbm2ddl.auto>

    <!-- Jacoco & Sonar -->
    <sonar.jacoco.reportPath>${project.basedir}/target/jacoco-unit.exec</sonar.jacoco.reportPath>
    <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
    <itCoverageAgent />

    <!-- Integration tests -->
    <app.server>jboss-eap</app.server>
    <jboss.version>6.4</jboss.version>
    <arquillian.container.groupId>org.jboss.as</arquillian.container.groupId>
    <arquillian.container.artifactId>jboss-as-arquillian-container-managed</arquillian.container.artifactId>
    <default.management.port>9999</default.management.port>
    <test.server.unpack.dir>${project.basedir}/../target</test.server.unpack.dir>
    <test.server.build.dir>${test.server.unpack.dir}/${app.server}-${jboss.version}</test.server.build.dir>
    <arquillian.container.type>managed</arquillian.container.type>
    <jboss.port.offset>0</jboss.port.offset>
    <jboss.management.port>${default.management.port}</jboss.management.port>
    <failsafe.test.skip>true</failsafe.test.skip>
    <failsafe.test.remote.skip>true</failsafe.test.remote.skip>
    <failsafe.test.container.skip>true</failsafe.test.container.skip>
    <surefire.test.remote.skip>true</surefire.test.remote.skip>
    <failsafe.test.integration.skip>true</failsafe.test.integration.skip>
    <failsafe.test.settings>${user.home}/.m2/settings.xml</failsafe.test.settings>
    <auth>false</auth>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
          <version>1.9.13</version>
      </dependency>

      <dependency>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
          <version>1.9.13</version>
      </dependency>

      <dependency>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-core</artifactId>
          <version>${version.keycloak}</version>
      </dependency>

      <dependency>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-adapter-core</artifactId>
          <version>${version.keycloak}</version>
      </dependency>

      <dependency>
          <groupId>org.keycloak</groupId>
          <artifactId>keycloak-installed-adapter</artifactId>
          <version>${version.keycloak}</version>
      </dependency>

      <!-- Project modules, to support cross-module dependencies -->
      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>auth</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>test-common</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>test-arquillian-container</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>common</artifactId>
        <version>${project.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>moduleconfig</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>datastore</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>ear-package</artifactId>
        <version>${project.version}</version>
        <type>ear</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>ear-package</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>jenkins-build-driver</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>maven-repository-manager</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>build-coordinator</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>model</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Use this dependency to attach WAR itself -->
      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>rest</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>termd-build-driver</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>

      <!-- Use this dependency to attach transitive dependencies -->
      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>rest</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>termd-build-driver</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
      </dependency>

      <!-- Use this dependency to attach war classes -->
      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>rest</artifactId>
        <version>${project.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>termd-build-driver</artifactId>
        <version>${project.version}</version>
        <classifier>classes</classifier>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>spi</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>ui</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>web</artifactId>
        <version>${project.version}</version>
        <type>war</type>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>docker-environment-driver</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>openshift-environment-driver</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>integration-test</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>demo-data</artifactId>
        <version>${project.version}</version>
      </dependency>
      <!-- END: Project modules -->

      <dependency>
        <groupId>org.jboss.shrinkwrap.resolver</groupId>
        <artifactId>shrinkwrap-resolver-bom</artifactId>
        <version>2.1.1</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-arquillian-container-embedded</artifactId>
        <version>${jboss.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-embedded</artifactId>
        <version>${jboss.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.offbytwo.jenkins</groupId>
        <artifactId>jenkins-client</artifactId>
        <version>0.3.1-20150308</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${version.guava}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-jaxrs</artifactId>
        <version>1.5.3</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-core</artifactId>
        <version>1.5.3</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>1.5.3</version>
      </dependency>

      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>el-api</artifactId>
        <version>2.2</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${version.org.apache.httpcomponents.httpclient}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${version.org.apache.httpcomponents.httpcore}</version>
      </dependency>

      <dependency>
        <groupId>org.commonjava.maven.atlas</groupId>
        <artifactId>atlas-identities</artifactId>
        <version>${atlasVersion}</version>
      </dependency>

      <dependency>
        <groupId>io.undertow</groupId>
        <artifactId>undertow-websockets-jsr</artifactId>
        <version>${version.undertow-websockets-jsr}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>1.1.5.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-arquillian-container-managed</artifactId>
        <version>7.2.0.Final</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-arquillian-container-remote</artifactId>
        <version>7.2.0.Final</version>
      </dependency>

      <dependency>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-common-core</artifactId>
        <version>2.2.22.GA</version> <!-- TODO upgrade to 2.5-->
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-transaction-jta</artifactId>
        <version>1.0.1.Final</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian.container</groupId>
        <artifactId>arquillian-weld-se-embedded-1.1</artifactId>
        <version>1.0.0.CR8</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.websocket</groupId>
        <artifactId>jboss-websocket-api_1.0_spec</artifactId>
        <version>1.0.0.Final</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.bom</groupId>
        <artifactId>jboss-javaee-6.0-with-tools</artifactId>
        <version>${version.jboss.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.bom</groupId>
        <artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
        <version>${version.jboss.bom}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec</groupId>
        <artifactId>jboss-javaee-6.0</artifactId>
        <version>3.0.3.Final</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging</artifactId>
        <version>${version.org.jboss.logging}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-jpamodelgen</artifactId>
        <version>${version.hibernate-jpamodelgen}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-spi</artifactId>
        <version>1.1.Final</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.weld</groupId>
        <artifactId>weld-core</artifactId>
        <version>1.1.32.Final</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.7</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.7</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>1.8.0.RELEASE</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>1.10.0.RELEASE</version>
      </dependency>

      <dependency>
        <groupId>com.openshift</groupId>
        <artifactId>openshift-restclient-java</artifactId>
        <version>3.0.1.Final</version>
      </dependency>

      <dependency>
        <groupId>org.apache.jclouds.labs</groupId>
        <artifactId>docker</artifactId>
        <version>${version.jclouds}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-core</artifactId>
        <version>${version.jclouds}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-compute</artifactId>
        <version>${version.jclouds}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.jclouds.driver</groupId>
        <artifactId>jclouds-slf4j</artifactId>
        <version>${version.jclouds}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>2.3.5.Final</version>
        <exclusions>
          <exclusion>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.9.2</version>
      </dependency>

      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>jbpm-test</artifactId>
        <version>${version.jbpm}</version>
      </dependency>

      <dependency>
        <groupId>org.kie.remote</groupId>
        <artifactId>kie-remote-client</artifactId>
        <version>${version.kie-services-client}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>${version.junit}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.weld.se</groupId>
        <artifactId>weld-se</artifactId>
        <version>2.2.0.SP1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.arquillian.extension</groupId>
        <artifactId>arquillian-jacoco</artifactId>
        <version>1.0.0.Alpha7</version>
      </dependency>

      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.core</artifactId>
        <version>0.7.1.201405082137</version>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${version.assertj-core}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${version.mockito-all}</version>
      </dependency>
      <dependency>
        <groupId>com.googlecode.catch-exception</groupId>
        <artifactId>catch-exception</artifactId>
        <version>${version.catch-exception}</version>
        <scope>test</scope>
      </dependency>


      <dependency>
        <groupId>org.commonjava.aprox</groupId>
        <artifactId>aprox-promote-client-java</artifactId>
        <version>${aproxVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.aprox</groupId>
        <artifactId>aprox-folo-client-java</artifactId>
        <version>${aproxVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.aprox</groupId>
        <artifactId>aprox-client-core-java</artifactId>
        <version>${aproxVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.commonjava.aprox.embed</groupId>
        <artifactId>aprox-embedder-savant</artifactId>
        <version>${aproxVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.commonjava.aprox</groupId>
        <artifactId>aprox-test-fixtures-core</artifactId>
        <version>${aproxVersion}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.commonjava.aprox.boot</groupId>
            <artifactId>aprox-booter-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>com.jayway.restassured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>2.4.0</version>
      </dependency>

      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${version.org.postgresql}</version>
      </dependency>

      <dependency>
        <groupId>cz.jirutka.rsql</groupId>
        <artifactId>rsql-parser</artifactId>
        <version>2.0.M1</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${version.jackson}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${version.jackson.annotations}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.6</version>
      </dependency>

      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${version.org.json}</version>
      </dependency>

      <dependency>
        <groupId>org.hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>2.3.2</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.jboss.pnc</groupId>
        <artifactId>build-agent</artifactId>
        <version>0.1-SNAPSHOT</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>hibernate3-maven-plugin</artifactId>
          <version>3.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.2</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.9</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>2.5</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4</version>
          <dependencies>
            <dependency>
              <groupId>org.commonjava.maven.enforcer</groupId>
              <artifactId>enforce-managed-deps-rule</artifactId>
              <version>1.2</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>enforce-plugin-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requirePluginVersions />
                </rules>
              </configuration>
            </execution>

            <execution>
              <id>no-managed-deps</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <phase>initialize</phase>
              <configuration>
                <rules>
                  <requireManagedDeps implementation="org.commonjava.maven.enforcer.rule.EnforceManagedDepsRule">
                    <checkProfiles>true</checkProfiles>
                    <failOnViolation>true</failOnViolation>
                    <regexIgnored>
                        <regexIgnored>[{]</regexIgnored>
                    </regexIgnored>
                  </requireManagedDeps>
                </rules>
              </configuration>
            </execution>

          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.1</version>
        </plugin>

        <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.5</version>
            <configuration>
                <archive>
                    <index>true</index>
                    <manifest>
                        <addDefaultSpecificationEntries>
                            true
                        </addDefaultSpecificationEntries>
                        <addDefaultImplementationEntries>
                            true
                        </addDefaultImplementationEntries>
                    </manifest>
                    <manifestEntries>
                        <Implementation-URL>${project.url}</Implementation-URL>
                        <Java-Version>${java.version}</Java-Version>
                        <Java-Vendor>${java.vendor}</Java-Vendor>
                        <Os-Name>${os.name}</Os-Name>
                        <Os-Arch>${os.arch}</Os-Arch>
                        <Os-Version>${os.version}</Os-Version>
                        <Scm-Url>${project.scm.url}</Scm-Url>
                        <Scm-Connection>${project.scm.connection}</Scm-Connection>
                        <Scm-Revision>${buildNumber}</Scm-Revision>
                        <Build-Timestamp>${datetime}</Build-Timestamp>
                    </manifestEntries>
                </archive>
            </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.7</version>
        </plugin>

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.18.1</version>
          <configuration>
            <trimStackTrace>false</trimStackTrace>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.18.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-ear-plugin</artifactId>
          <version>2.9.1</version>
          <configuration>
            <archive>
              <index>true</index>
              <manifest>
                <addDefaultSpecificationEntries>
                  true
                </addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>
                  true
                </addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-URL>${project.url}</Implementation-URL>
                <Java-Version>${java.version}</Java-Version>
                <Java-Vendor>${java.vendor}</Java-Vendor>
                <Os-Name>${os.name}</Os-Name>
                <Os-Arch>${os.arch}</Os-Arch>
                <Os-Version>${os.version}</Os-Version>
                <Scm-Url>${project.scm.url}</Scm-Url>
                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                <Scm-Revision>${buildNumber}</Scm-Revision>
                <Build-Timestamp>${datetime}</Build-Timestamp>
              </manifestEntries>
            </archive>
            <version>6</version>
            <defaultLibBundleDir>lib</defaultLibBundleDir>
            <fileNameMapping>no-version</fileNameMapping>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.5</version>
          <configuration>
            <archive>
              <index>true</index>
              <manifest>
                <addDefaultSpecificationEntries>
                  true
                </addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>
                  true
                </addDefaultImplementationEntries>
              </manifest>
              <manifestEntries>
                <Implementation-URL>${project.url}</Implementation-URL>
                <Java-Version>${java.version}</Java-Version>
                <Java-Vendor>${java.vendor}</Java-Vendor>
                <Os-Name>${os.name}</Os-Name>
                <Os-Arch>${os.arch}</Os-Arch>
                <Os-Version>${os.version}</Os-Version>
                <Scm-Url>${project.scm.url}</Scm-Url>
                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                <Scm-Revision>${buildNumber}</Scm-Revision>
                <Build-Timestamp>${datetime}</Build-Timestamp>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.3</version>
          <executions>
            <execution>
              <phase>validate</phase>
              <id>buildnumber</id>
              <goals>
                <goal>create</goal>
              </goals>
              <configuration>
                <shortRevisionLength>8</shortRevisionLength>
                <timestampFormat>{0,date,dd MMMM yyyy}</timestampFormat>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
          <executions>
            <execution>
              <id>parse-version</id>
              <goals>
                <goal>parse-version</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.2</version>
          <executions>
            <execution>
              <id>calculate-jboss-port-offset</id>
              <goals>
                <goal>execute</goal>
              </goals>
              <phase>validate</phase>
              <configuration>
                <scripts>
                  <script>
                    offset = Integer.valueOf(System.getProperty("jboss.port.offset",
                    "0"))
                    manPort =
                    Integer.valueOf(project.properties["default.management.port"])
                    project.properties['jboss.management.port'] =
                    "${manPort + offset}".trim()
                  </script>
                </scripts>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-all</artifactId>
              <version>2.3.7</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.jboss.as.plugins</groupId>
          <artifactId>jboss-as-maven-plugin</artifactId>
          <version>7.7.Final</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.7.1.201405082137</version>
        </plugin>

        <plugin>
          <groupId>org.jolokia</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.13.0</version>
        </plugin>

        <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <version>0.1</version>
        </plugin>

        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.11</version>
          <configuration>
            <header>${executionRoot}/.license-header.txt</header>
            <excludes>
              <exclude>**/README</exclude>
              <exclude>**/LICENSE.txt</exclude>
              <exclude>.license-header.txt</exclude>
              <exclude>**/plugins.txt</exclude>
              <exclude>**/Dockerfile</exclude>
              <exclude>**/apidocs/**</exclude>

              <!-- Exclude downloaded/generated -->
              <exclude>**/.tmp/**</exclude>
              <exclude>**/.build-tmp/**</exclude>
              <exclude>**/.sass-cache/**</exclude>
              <exclude>**/bower_components/**</exclude>
              <exclude>**/dist/**</exclude>
              <exclude>**/node/**</exclude>
              <exclude>**/node_modules/**</exclude>
              <exclude>**/rest-config.json</exclude>
            </excludes>
          </configuration>
        </plugin>

        <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.commonjava.maven.plugins</groupId>
                    <artifactId>directory-maven-plugin</artifactId>
                    <versionRange>[0.1,)</versionRange>
                    <goals>
                      <goal>highest-basedir</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <!--
          Generated javaagent line if often included in some test via filtering. This is why it needs to be executed
          before actual filtering occurs
        -->
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>prepare-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <destFile>${sonar.jacoco.reportPath}</destFile>
              <includes>
                <include>org.jboss.pnc.*</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>prepare-integration-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <destFile>${sonar.jacoco.itReportPath}</destFile>
              <propertyName>itCoverageAgent</propertyName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
          <groupId>org.commonjava.maven.plugins</groupId>
          <artifactId>directory-maven-plugin</artifactId>
          <executions>
              <execution>
                  <id>directories</id>
                  <goals>
                      <goal>highest-basedir</goal>
                  </goals>
                  <phase>validate</phase>
                  <configuration>
                      <property>executionRoot</property>
                  </configuration>
              </execution>
          </executions>
      </plugin>
      <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <executions>
              <execution>
                  <phase>validate</phase>
                  <goals>
                      <goal>read-project-properties</goal>
                  </goals>
            <configuration>
              <files>
                <file>${executionRoot}/pnc.cfg</file>
              </files>
              <quiet>true</quiet>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Check for the minimum version of Java and Maven.  Runs during the validate phase. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java-version</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <message>To build this project JDK ${jdk.min.version} (or greater) is required. Please install it.</message>
                  <version>${jdk.min.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-maven-version</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <message>To build this project Maven ${maven.min.version} (or greater) is required. Please install it.</message>
                  <version>${maven.min.version}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <useReleaseProfile>false</useReleaseProfile>
            <addSchema>false</addSchema>
            <arguments>-Prelease -Dlicense.skip=${licenseSkip} -DskipTests=${testSkip} -DpushChanges=${pushChanges}</arguments>
            <completionGoals>scm:add scm:checkin -DpushChanges=${pushChanges}</completionGoals>
          </configuration>
        </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <properties>
            <property>
              <name>listener</name>
              <value>org.jboss.pnc.test.listener.PrintTestNameListener</value>
            </property>
          </properties>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
        <executions>
          <execution>
            <id>default-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <!-- To be uncommented when NCL-724 is done -->
              <!--<parallel>all</parallel>-->
              <!--<threadCount>2</threadCount>-->
              <!--<perCoreThreadCount>true</perCoreThreadCount>-->
              <excludedGroups>org.jboss.pnc.test.category.ContainerTest, org.jboss.pnc.test.category.RemoteTest</excludedGroups>
            </configuration>
          </execution>
          <execution>
            <id>remote-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <groups>org.jboss.pnc.test.category.RemoteTest</groups>
              <excludedGroups>org.jboss.pnc.test.category.ContainerTest</excludedGroups>
              <skip>${surefire.test.remote.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- property set by jacoco-maven-plugin -->
          <argLine>${itCoverageAgent}</argLine>
          <includes>
            <include>**/*.java</include>
          </includes>
          <properties>
            <property>
              <name>listener</name>
              <value>org.jboss.pnc.test.listener.PrintTestNameListener</value>
            </property>
          </properties>
          <skip>${failsafe.test.skip}</skip>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemPropertyVariables>
            <org.apache.maven.user-settings>${failsafe.test.settings}</org.apache.maven.user-settings>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <!-- Invoked when there is no remote tests -->
            <id>container-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <skip>${failsafe.test.integration.skip}</skip>
              <groups>org.jboss.pnc.test.category.ContainerTest</groups>
              <excludedGroups>org.jboss.pnc.test.category.RemoteTest</excludedGroups>
            </configuration>
          </execution>
          <execution>
            <!-- Invoked for container AND remote tests -->
            <id>container-and-remote-tests</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <groups>org.jboss.pnc.test.category.ContainerTest, org.jboss.pnc.test.category.RemoteTest</groups>
              <skip>${failsafe.test.remote.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <detectOfflineLinks>false</detectOfflineLinks>
              <quiet>true</quiet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>bintray</id>
      <url>http://dl.bintray.com/rnc/maven</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jboss-snapshots</id>
      <url>https://repository.jboss.org/nexus/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>examples</id>
      <modules>
        <module>examples/oauth-client</module>
      </modules>
    </profile>

    <profile>
      <id>container-tests</id>
      <properties>
        <failsafe.test.skip>false</failsafe.test.skip>
        <failsafe.test.container.skip>false</failsafe.test.container.skip>
        <failsafe.test.integration.skip>false</failsafe.test.integration.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-property</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>eap6.zip.url</property>
                      <message>You must set the location of the eap zip file "eap6.zip.url"</message>
                    </requireProperty>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>remote-tests</id>
      <properties>
        <!-- if container tests are disabled, we don't want to prevent container-remote tests from executing -->
        <failsafe.test.remote.skip>${failsafe.test.skip}</failsafe.test.remote.skip>
        <!-- Container tests are performed in container-and-remote group -->
        <failsafe.test.integration.skip>true</failsafe.test.integration.skip>
        <surefire.test.remote.skip>false</surefire.test.remote.skip>
      </properties>
    </profile>

    <profile>
      <id>production</id>
      <activation>
        <property>
          <name>production</name>
        </property>
      </activation>
      <properties>
        <persistence.jta-data-source>java:jboss/datasources/NewcastleDS</persistence.jta-data-source>
        <persistence.hibernate.dialect>org.hibernate.dialect.PostgreSQL82Dialect</persistence.hibernate.dialect>
        <persistence.hibernate.hbm2ddl.auto>update</persistence.hibernate.hbm2ddl.auto>
      </properties>
    </profile>

    <profile>
      <id>license-format</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>process-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>license-check</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check-license</id>
                <phase>initialize</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-scm-plugin</artifactId>
              <version>1.8.1</version>
              <configuration>
                <includes>ui/bower.json,ui/package.json,ui/npm-shrinkwrap.json</includes>
                <message>Update JSON Versions</message>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>check-license</id>
                <phase>initialize</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>patch-json-versions</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <loadproperties srcFile="${executionRoot}/release.properties">
                      <filterchain>
                        <linecontains>
                          <contains value="project.rel.org.jboss.pnc\:parent" />
                        </linecontains>
                      </filterchain>
                    </loadproperties>

                    <property name="newversion" value="${project.rel.org.jboss.pnc:parent}.0" />

                    <replaceregexp byline="false" flags="m" file="${basedir}/bower.json" match="ui&quot;,&#xA; &quot;version&quot;: &quot;[0-9].*&quot;" replace="ui&quot;,&#xA; &quot;version&quot;: &quot;${newversion}&quot;" />
                    <replaceregexp byline="false" flags="m" file="${basedir}/package.json" match="ui&quot;,&#xA; &quot;version&quot;: &quot;[0-9].*&quot;" replace="ui&quot;,&#xA; &quot;version&quot;: &quot;${newversion}&quot;" />

                    <replaceregexp byline="false" flags="m" file="${basedir}/npm-shrinkwrap.json" match="ui&quot;,&#xA; &quot;version&quot;: &quot;[0-9].*&quot;" replace="ui&quot;,&#xA; &quot;version&quot;: &quot;${newversion}&quot;" />

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
