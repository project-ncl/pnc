<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>parent</artifactId>
    <groupId>org.jboss.pnc</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>integration-test</artifactId>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ear-package</artifactId>
      <scope>test</scope>
      <type>ear</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ear-package</artifactId>
      <scope>test</scope>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>pnc-rest</artifactId>
      <scope>test</scope>
      <classifier>classes</classifier>
    </dependency>

    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>test-arquillian-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <!-- property set by jacoco-maven-plugin -->
          <argLine>${itCoverageAgent}</argLine>
          <includes>
            <include>**/*.java</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <id>calculate-jboss-port-offset</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <scripts>
                <script>
                  offset = Integer.valueOf(System.getProperty("jboss.port.offset",
                  "0"))
                  manPort =
                  Integer.valueOf(project.properties["default.management.port"])
                  project.properties['jboss.management.port'] =
                  "${manPort + offset}".trim()
                </script>
              </scripts>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.3.7</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>wildfly-820-remote</id>
      <activation>
        <property>
            <name>arquillian.container.type</name>
            <value>remote</value>
        </property>
      </activation>
    </profile>
    <profile>
      <id>wildfly-820-managed</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack-wildfly</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wildfly</groupId>
                      <artifactId>wildfly-dist</artifactId>
                      <version>${jboss.version}</version>
                      <type>zip</type>
                      <overWrite>true</overWrite>
                      <outputDirectory>${test.server.unpack.dir}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- It needs an existed EAP 6.4.0 zip file that can be downloaded from.
      Use URL schema for the location. mvn -Peap640 -Deap6.zip.url=http://download.devel.redhat.com/devel/candidates/JBEAP/JBEAP-6.4.0.DR12/jboss-eap-6.4.0.DR12.zip -->
    <profile>
      <id>eap640</id>
      <activation>
        <property>
          <name>eap</name>
        </property>
      </activation>
      <properties>
        <app.server>jboss-eap</app.server>
        <jboss.version>6.4</jboss.version>
        <arquillian.container.groupId>org.jboss.as</arquillian.container.groupId>
        <arquillian.container.artifactId>jboss-as-arquillian-container-managed</arquillian.container.artifactId>
        <arquillian.container.version>${version.jboss.as}</arquillian.container.version>
        <default.management.port>9999</default.management.port>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-eap-for-jdk8</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>generate-test-resources</phase>
                <configuration>
                  <target>
                    <echo>Preparing EAP 6.4 application server</echo>
                    <fail
                      message="Please specify EAP 6.4 zip file URL via: -Deap6.zip.url="
                      unless="eap6.zip.url" />
                    <get usetimestamp="true" src="${eap6.zip.url}"
                      skipexisting="true"
                      dest="${test.server.unpack.dir}/${app.server}-${jboss.version}.zip" />
                    <unzip
                      src="${test.server.unpack.dir}/${app.server}-${jboss.version}.zip"
                      dest="${test.server.unpack.dir}/" overwrite="true" />
                    <copy file="${project.basedir}/src/test/resources/keycloak-standalone.xml" 
                            tofile="${test.server.build.dir}/standalone/configuration/standalone.xml" overwrite="true"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy</id>
                <phase>package</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                        <groupId>org.keycloak</groupId>
                        <artifactId>keycloak-eap6-adapter-dist</artifactId>
                        <version>1.1.0.Final</version>
                        <type>zip</type>
                        <overWrite>true</overWrite>
                        <outputDirectory>${test.server.build.dir}</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                  <!-- other configurations here -->
                </configuration>
              </execution>
            </executions>
          </plugin>          
        </plugins>
      </build>
    </profile>

    <profile>
      <id>postgresql</id>
      <activation>
        <property>
          <name>postgresql</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-server</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <jbossHome>${test.server.build.dir}</jbossHome>
                </configuration>
              </execution>
              <execution>
                <id>deploy-driver</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>deploy-artifact</goal>
                </goals>
                <configuration>
                  <groupId>org.postgresql</groupId>
                  <artifactId>postgresql</artifactId>
                  <name>postgresql-jdbc.jar</name>
                </configuration>
              </execution>
              <execution>
                <id>add-datasource</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <address>subsystem=datasources</address>
                  <resources>
                    <resource>
                      <address>xa-data-source=java:jboss/datasources/NewcastleDS</address>
                      <properties>
                        <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>                        <jndi-name>java:jboss/datasources/NewcastleDS</jndi-name>
                        <enabled>true</enabled>
                        <driver-name>postgresql-jdbc.jar</driver-name>
                      </properties>
                      <resources>
                        <resource>
                          <address>
                            xa-datasource-properties=DatabaseName
                          </address>
                          <properties>
                            <value>newcastle</value>
                          </properties>
                        </resource>
                        <resource>
                          <address>
                            xa-datasource-properties=ServerName
                          </address>
                          <properties>
                            <value>localhost</value>
                          </properties>
                        </resource>
                        <resource>
                          <address>
                            xa-datasource-properties=User
                          </address>
                          <properties>
                            <value>newcastle</value>
                          </properties>
                        </resource>
                        <resource>
                          <address>
                            xa-datasource-properties=Password
                          </address>
                          <properties>
                            <value>newcastle</value>
                          </properties>
                        </resource>
                      </resources>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>shutdown-server</id>
                <phase>generate-test-resources</phase>
                <goals>
                  <goal>shutdown</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
