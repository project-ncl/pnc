{"version":3,"sources":["license.js","pnc-ui-extras/pnc-ui-extras.module.js","pnc-ui-extras/combobox/combobox.module.js","pnc-ui-extras/combobox/combobox.component.js","pnc-ui-extras/combobox/expressionParser.factory.js","pnc-ui-extras/combobox/px-expression.directive.js","pnc-ui-extras/ui-breadcrumbs/uiBreadcrumbs.js","templates.js"],"names":["angular","module","ComboboxController","$log","$scope","$element","$timeout","options","showDropDown","modelOptions","optionTemplateUrl","DEFAULT_OPTION_TEMPLATE_URL","ngModel","editable","$parsers","push","option","getOptionFromViewValue","viewValue","isDefined","getModelValue","$validators","isValidOption","modelValue","getOptionFromModelValue","$render","inputModel","$viewValue","$formatters","transformed","getViewValue","$watch","$setViewValue","loadOptions","debounceMs","debounce","parseInt","find","on","$applyAsync","$setTouched","off","pxExpression","getOptions","then","debug","$id","isArray","value","highlighted","undefined","setShowDropDown","closeDropDown","index","length","isUndefined","setHighlighted","$event","stopPropagation","preventDefault","key","openDropDown","highlightNext","highlightPrevious","select","$inject","pxCombobox","templateUrl","controller","require","bindings","placeholder","component","pxExpressionParser","$parse","TYPEAHEAD_REGEXP","parse","input","match","Error","itemName","source","viewMapper","modelMapper","factory","PxExpressionController","$q","$attrs","parsed","item","locals","when","restrict","scope","directive","moduleName","err","$interpolate","$state","$transitions","elem","attrs","displaynameProperty","abstractProxyProperty","link","transition","breadcrumbs","$current","name","updateBreadcrumbsArray","onSuccess","_transition","workingState","displayName","currentState","getWorkingState","getDisplayName","stateAlreadyInBreadcrumbs","route","parent","reverse","proxyStateName","abstract","getObjectValue","copy","get","interpolationContext","propertyReference","getResolveTokens","forEach","token","isString","startsWith","injector","objectPath","context","i","propertyArray","split","state","alreadyUsed","run","$templateCache","put"],"mappings":"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","file":"pnc-ui-extras.js","sourcesContent":["/*\n * JBoss, Home of Professional Open Source.\n * Copyright 2014-2020 Red Hat, Inc., and individual contributors\n * as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */","angular.module('pnc-ui-extras', [\n  'pnc-ui-extras.templates',\n  'pnc-ui-extras.combobox',\n  'pnc-ui-extras.uiBreadcrumbs'\n]);\n\nangular.module('pnc-ui-extras.templates', []);\n","angular.module('pnc-ui-extras.combobox', [\n  'pnc-ui-extras.templates'\n]);\n","class ComboboxController {\n\n  constructor($log, $scope, $element, $timeout) {\n    this.$log = $log;\n    this.$scope = $scope;\n    this.$element = $element;\n    this.$timeout = $timeout;\n\n    this.options = []; // List of options for the user to select from\n    this.showDropDown = false;\n    this.modelOptions = {}; // Values for ng-model-options directive\n  }\n\n  $onInit() {\n    if (!this.optionTemplateUrl) {\n      const DEFAULT_OPTION_TEMPLATE_URL = 'pnc-ui-extras/combobox/combobox-option.template.html';\n      this.optionTemplateUrl = DEFAULT_OPTION_TEMPLATE_URL;\n    }\n    if (this.ngModel) {\n      const editable = this.editable === true || this.editable === 'true';\n\n      this.ngModel.$parsers.push(viewValue => {\n        const option = this.getOptionFromViewValue(viewValue);\n\n        if (angular.isDefined(option)) {\n          return this.getModelValue(option);\n        } else if (editable) {\n          return viewValue;\n        }\n      });\n\n      this.ngModel.$validators.isValidOption = (modelValue, viewValue) => {\n        return angular.isDefined(this.getOptionFromModelValue(modelValue)) || editable;\n      };\n\n      this.ngModel.$render = () => this.inputModel = this.ngModel.$viewValue;\n\n      this.ngModel.$formatters.push(modelValue => {\n        const transformed = this.getViewValue(modelValue);\n\n        if (angular.isDefined(transformed)) {\n          return transformed;\n        }\n\n        const option = this.getOptionFromModelValue(modelValue);\n\n        if (angular.isDefined(option)) {\n          return this.getViewValue(option);\n        } else if (editable) {\n          return modelValue;\n        }\n      });\n\n      this.$scope.$watch(\n        () => this.inputModel,\n        () => {\n          this.ngModel.$setViewValue(this.inputModel);\n          this.loadOptions(this.inputModel);\n        }\n      );\n\n      if (this.debounceMs) {\n        this.modelOptions.debounce = parseInt(this.debounceMs);\n      }\n\n    } else {\n      this.loadOptions();\n    }\n  }\n\n  $postLink() {\n    if (this.ngModel) {\n      this.$timeout(() => {\n        this.$element.find('input').on('blur', () => {\n          this.$scope.$applyAsync(() => this.ngModel.$setTouched());\n        });\n      });\n    }\n  }\n\n  $onDestroy() {\n    if (this.ngModel) {\n      this.$element.find('input').off('blur');\n    }\n  }\n\n  loadOptions(viewValue) {\n    return this.pxExpression.getOptions(viewValue).then(options => {\n      this.$log.debug('ComboboxController::loadOptions() scopeId = %d | options = %O', this.$scope.$id, options);\n      this.$scope.$applyAsync(() => this.options = options);\n      return options;\n    });\n  }\n\n  getViewValue(option) {\n    return this.pxExpression.getViewValue(option);\n  }\n\n  getModelValue(option) {\n    return this.pxExpression.getModelValue(option);\n  }\n\n  getOptionFromViewValue(viewValue) {\n    if (!angular.isArray(this.options)) {\n      return;\n    }\n    return this.options.find(option => this.getViewValue(option) === viewValue);\n  }\n\n  getOptionFromModelValue(modelValue) {\n    if (!angular.isArray(this.options)) {\n      return;\n    }\n    if (this.getViewValue(modelValue)) {\n      return modelValue;\n    }\n    return this.options.find(option => this.getModelValue(option) === modelValue);\n  }\n\n  setShowDropDown(value) {\n    this.$scope.$applyAsync(() => this.showDropDown = value);\n    if (!value) {\n      this.highlighted = undefined;\n    }\n  }\n\n  openDropDown() {\n    this.setShowDropDown(true);\n  }\n\n  closeDropDown() {\n    this.setShowDropDown(false);\n  }\n\n  toggleDropDown() {\n    this.setShowDropDown(!this.showDropDown);\n  }\n\n  select(option) {\n    this.inputModel = this.getViewValue(option);\n    this.closeDropDown();\n  }\n\n  clear() {\n    this.inputModel = undefined;\n    this.closeDropDown();\n  }\n\n  setHighlighted(index) {\n    this.highlighted = index;\n  }\n\n  isHighlighted(index) {\n    return this.highlighted === index;\n  }\n\n  highlightNext() {\n    if (!this.showDropDown || !this.options || this.options.length < 1) {\n      return;\n    }\n\n    if (angular.isUndefined(this.highlighted)) {\n      this.setHighlighted(0);\n    } else if (this.highlighted === this.options.length - 1) {\n      return;\n    } else {\n      this.setHighlighted(this.highlighted + 1);\n    }\n  }\n\n  highlightPrevious() {\n    if (!this.showDropDown || !this.options || this.options.length < 1) {\n      return;\n    }\n\n    if (angular.isUndefined(this.highlighted) || this.highlighted === 0) {\n      return;\n    } else {\n        this.setHighlighted(this.highlighted - 1);\n    }\n  }\n\n  onKey($event) {\n    $event.stopPropagation();\n    $event.preventDefault();\n    switch ($event.key) {\n      case 'ArrowDown':\n        if (!this.showDropDown) {\n          this.openDropDown();\n        } else {\n          this.highlightNext();\n        }\n        break;\n      case 'ArrowUp':\n        this.highlightPrevious();\n        break;\n      case 'Enter':\n        this.select(this.options[this.highlighted]);\n        break;\n      case 'Escape':\n        this.closeDropDown();\n        break;\n    }\n  }\n}\n\nComboboxController.$inject = ['$log', '$scope', '$element', '$timeout'];\n\nconst pxCombobox = {\n  templateUrl: 'pnc-ui-extras/combobox/combobox.template.html',\n  controller: ComboboxController,\n  require: {\n    pxExpression: '?pxExpression',\n    ngModel: '?ngModel'\n  },\n  bindings: {\n    placeholder: '@',\n    editable: '<',\n    debounceMs: '@',\n    optionTemplateUrl: '@'\n  }\n};\n\nangular.module('pnc-ui-extras.combobox')\n       .component('pxCombobox', pxCombobox);\n","/**\n * The work in this file is entirely the work of the AngularUI team, with only\n * extremely minor of modifications. Copyright attribution and license:\n *\n * The MIT License\n *\n * Copyright (c) 2012-2017 the AngularUI Team, https://github.com/organizations/angular-ui/teams/291112\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nconst pxExpressionParser = ($parse) => {\n  const TYPEAHEAD_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+([\\s\\S]+?)$/;\n   return {\n     parse: (input) => {\n       let match = input.match(TYPEAHEAD_REGEXP);\n       if (!match) {\n         throw new Error(\n           'Expected typeahead specification in form of \"_modelValue_ (as _label_)? for _item_ in _collection_\"' +\n             ' but got \"' + input + '\".');\n       }\n\n       return {\n         itemName: match[3],\n         source: $parse(match[4]),\n         viewMapper: $parse(match[2] || match[1]),\n         modelMapper: $parse(match[1])\n       };\n     }\n   };\n };\n\npxExpressionParser.$inject = ['$parse'];\n\nangular.module('pnc-ui-extras.combobox')\n       .factory('pxExpressionParser', pxExpressionParser);\n","class PxExpressionController {\n  constructor($log, $q, $scope, $attrs, pxExpressionParser) {\n    this.$log = $log;\n    this.$q = $q;\n    this.$scope = $scope;\n    this.$attrs = $attrs;\n    this.pxExpressionParser = pxExpressionParser;\n\n    this.parsed = pxExpressionParser.parse($attrs.pxExpression);\n\n    this.$log.debug('PxExpressionController::constructor() with scope id = ' + $scope.$id);\n    this.$log.debug('px-expression = ' + $attrs.pxExpression, $scope);\n  }\n\n  getViewValue(item) {\n    let locals = {};\n    locals[this.parsed.itemName] = item;\n    return this.parsed.viewMapper(this.$scope, locals);\n  }\n\n  getModelValue(item) {\n    let locals = {};\n    locals[this.parsed.itemName] = item;\n    return this.parsed.modelMapper(this.$scope, locals);\n  }\n\n  getOptions(viewValue) {\n    return this.$q.when(this.parsed.source(this.$scope, { $viewValue: viewValue }));\n  }\n}\n\nPxExpressionController.$inject = ['$log', '$q', '$scope', '$attrs', 'pxExpressionParser'];\n\n\nconst pxExpression = () => {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: PxExpressionController,\n  };\n};\n\nangular.module('pnc-ui-extras.combobox')\n       .directive('pxExpression', pxExpression);\n","// jshint ignore:start\n//\n// CUSTOMIZED IMPLEMENTATION TO MAKE IT COMPATIBLE WITH ui-router 1.0\n//\n/**\n * uiBreadcrumbs automatic breadcrumbs directive for AngularJS & Angular ui-router.\n *\n * https://github.com/michaelbromley/angularUtils/tree/master/src/directives/uiBreadcrumbs\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n\n\n(function() {\n\n    /**\n     * Config\n     */\n    var moduleName = 'pnc-ui-extras.uiBreadcrumbs';\n    var templateUrl = 'pnc-ui-extras/ui-breadcrumbs/uiBreadcrumbs.tpl.html';\n\n    /**\n     * Module\n     */\n    var module;\n    try {\n        module = angular.module(moduleName);\n    } catch(err) {\n        // named module does not exist, so create one\n        module = angular.module(moduleName, ['ui.router']);\n    }\n\n    module.directive('uiBreadcrumbs', ['$interpolate', '$state', '$transitions', function($interpolate, $state, $transitions) {\n            return {\n                restrict: 'E',\n                templateUrl: function(elem, attrs) {\n                    return attrs.templateUrl || templateUrl;\n                },\n                scope: {\n                    displaynameProperty: '@',\n                    abstractProxyProperty: '@?'\n                },\n                link: function(scope) {\n                    var transition;\n\n                    scope.breadcrumbs = [];\n                    if ($state.$current.name !== '') {\n                        updateBreadcrumbsArray();\n                    }\n                    $transitions.onSuccess({}, function(_transition) {\n                        transition = _transition;\n                        updateBreadcrumbsArray();\n                    });\n\n                    /**\n                     * Start with the current state and traverse up the path to build the\n                     * array of breadcrumbs that can be used in an ng-repeat in the template.\n                     */\n                    function updateBreadcrumbsArray() {\n                        var workingState;\n                        var displayName;\n                        var breadcrumbs = [];\n                        var currentState = $state.$current;\n\n                        while(currentState && currentState.name !== '') {\n                            workingState = getWorkingState(currentState);\n                            if (workingState) {\n                                displayName = getDisplayName(workingState);\n\n                                if (displayName !== false && !stateAlreadyInBreadcrumbs(workingState, breadcrumbs)) {\n                                    breadcrumbs.push({\n                                        displayName: displayName,\n                                        route: workingState.name\n                                    });\n                                }\n                            }\n                            currentState = currentState.parent;\n                        }\n                        breadcrumbs.reverse();\n                        scope.breadcrumbs = breadcrumbs;\n                    }\n\n                    /**\n                     * Get the state to put in the breadcrumbs array, taking into account that if the current state is abstract,\n                     * we need to either substitute it with the state named in the `scope.abstractProxyProperty` property, or\n                     * set it to `false` which means this breadcrumb level will be skipped entirely.\n                     * @param currentState\n                     * @returns {*}\n                     */\n                    function getWorkingState(currentState) {\n                        var proxyStateName;\n                        var workingState = currentState;\n                        if (currentState.abstract === true) {\n                            if (typeof scope.abstractProxyProperty !== 'undefined') {\n                                proxyStateName = getObjectValue(scope.abstractProxyProperty, currentState);\n                                if (proxyStateName) {\n                                    workingState = angular.copy($state.get(proxyStateName));\n                                    if (workingState) {\n                                        workingState.locals = currentState.locals;\n                                    }\n                                } else {\n                                    workingState = false;\n                                }\n                            } else {\n                                workingState = false;\n                            }\n                        }\n                        return workingState;\n                    }\n\n                    /**\n                     * Resolve the displayName of the specified state. Take the property specified by the `displayname-property`\n                     * attribute and look up the corresponding property on the state's config object. The specified string can be interpolated against any resolved\n                     * properties on the state config object, by using the usual {{ }} syntax.\n                     * @param currentState\n                     * @returns {*}\n                     */\n                    function getDisplayName(currentState) {\n                        var interpolationContext;\n                        var propertyReference;\n                        var displayName;\n\n                        if (!scope.displaynameProperty) {\n                            // if the displayname-property attribute was not specified, default to the state's name\n                            return currentState.name;\n                        }\n                        propertyReference = getObjectValue(scope.displaynameProperty, currentState);\n\n                        if (propertyReference === false) {\n                            return false;\n                        } else if (typeof propertyReference === 'undefined') {\n                            return currentState.name;\n                        } else {\n                            // use the $interpolate service to handle any bindings in the propertyReference string.\n                            // see https://ui-router.github.io/ng1/docs/latest/classes/transition.transition-1.html#getresolvetokens\n                            interpolationContext = {};\n                            transition.getResolveTokens().forEach(function(token){\n                                if ( angular.isString(token) && !token.startsWith('$') ) {\n                                    interpolationContext[token] = transition.injector().get(token);\n                                }\n                            });\n\n                            displayName = $interpolate(propertyReference)(interpolationContext);\n                            return displayName;\n                        }\n                    }\n\n                    /**\n                     * Given a string of the type 'object.property.property', traverse the given context (eg the current $state object) and return the\n                     * value found at that path.\n                     *\n                     * @param objectPath\n                     * @param context\n                     * @returns {*}\n                     */\n                    function getObjectValue(objectPath, context) {\n                        var i;\n                        var propertyArray = objectPath.split('.');\n                        var propertyReference = context;\n\n                        for (i = 0; i < propertyArray.length; i ++) {\n                            if (angular.isDefined(propertyReference[propertyArray[i]])) {\n                                propertyReference = propertyReference[propertyArray[i]];\n                            } else {\n                                // if the specified property was not found, default to the state's name\n                                return undefined;\n                            }\n                        }\n                        return propertyReference;\n                    }\n\n                    /**\n                     * Check whether the current `state` has already appeared in the current breadcrumbs array. This check is necessary\n                     * when using abstract states that might specify a proxy that is already there in the breadcrumbs.\n                     * @param state\n                     * @param breadcrumbs\n                     * @returns {boolean}\n                     */\n                    function stateAlreadyInBreadcrumbs(state, breadcrumbs) {\n                        var i;\n                        var alreadyUsed = false;\n                        for(i = 0; i < breadcrumbs.length; i++) {\n                            if (breadcrumbs[i].route === state.name) {\n                                alreadyUsed = true;\n                            }\n                        }\n                        return alreadyUsed;\n                    }\n                }\n            };\n        }]);\n})();\n","angular.module('pnc-ui-extras.templates').run(['$templateCache', function($templateCache) {$templateCache.put('pnc-ui-extras/combobox/combobox-option.template.html','<a ng-click=\"$ctrl.select(option)\" href>{{ $ctrl.getViewValue(option) }}</a>\\n');\n$templateCache.put('pnc-ui-extras/combobox/combobox.template.html','<style>\\n.px-search-clear {\\n  position: absolute;\\n  z-index: 100;\\n  right: 18px;\\n  top: 2px;\\n  height: 14px;\\n  margin: auto;\\n  color: inherit;\\n  cursor:  pointer;\\n}\\n\\n.px-search-clear > a:hover {\\n  background-color: inherit;\\n  color: inherit;\\n  cursor:  pointer;\\n}\\n\\n.px-combobox-dropdown {\\n  display: block;\\n}\\n.px-combobox-active a,a:hover {\\n  background-color: #def3ff;\\n}\\n.px-combobox-dropdown > .px-combobox-option a,a:hover {\\n  border-width: 0px;\\n}\\n\\n.px-combobox-dropdown > .px-combobobox-option {\\n  whitespace: normal !important;\\n  overflow-wrap: break-word !important;\\n}\\n\\n</style>\\n<div class=\"combobox-container\" ng-keydown=\"$event.stopPropagation()\">\\n  <div class=\"input-group\">\\n    <input type=\"text\" autocomplete=\"off\" id=\"combobox-{{::$id}}\" ng-keyup=\"$ctrl.onKey($event)\" placeholder=\"{{ ::$ctrl.placeholder }}\" class=\"combobox form-control\" ng-focus=\"$ctrl.openDropDown()\" ng-model=\"$ctrl.inputModel\" ng-model-options=\"$ctrl.modelOptions\" pf-focused=\"$ctrl.showDropDown\">\\n    <div class=\"px-search-clear\"><a class=\"px-search-clear\" ng-show=\"$ctrl.inputModel\" ng-click=\"$ctrl.clear()\"><span class=\"pficon pficon-close\"></span></a></div>\\n    <ul class=\"typeahead typeahead-long dropdown-menu px-combobox-dropdown\" ng-if=\"$ctrl.options.length > 0 && $ctrl.showDropDown\">\\n      <li ng-repeat=\"option in $ctrl.options\" ng-include=\"$ctrl.optionTemplateUrl\" class=\"px-combobox-option\" ng-mouseover=\"$ctrl.setHighlighted($index)\" ng-class=\"{ \\'px-combobox-active\\': $ctrl.isHighlighted($index) }\">\\n      </li>\\n      <li data-value=\"spinner\" class=\"text-center\" ng-show=\"$ctrl.isLoading()\">\\n        <span class=\"spinner spinner-xs spinner-inline\"></span>\\n      </li>\\n    </ul>\\n    <span class=\"input-group-addon dropdown-toggle\" ng-class=\"{ \\'dropup\\': $ctrl.showDropDown }\" data-dropdown=\"dropdown\" role=\"button\" ng-click=\"$ctrl.toggleDropDown()\">\\n      <span class=\"caret\"></span>\\n    </span>\\n  </div>\\n</div>\\n');\n$templateCache.put('pnc-ui-extras/ui-breadcrumbs/uiBreadcrumbs.tpl.html','<ol class=\"breadcrumb\">\\n  <li ng-repeat=\"crumb in breadcrumbs\"\\n      ng-class=\"{ active: $last }\"><a ui-sref=\"{{ crumb.route }}\" ng-if=\"!$last\">{{ crumb.displayName }}&nbsp;</a><span ng-show=\"$last\">{{ crumb.displayName }}</span>\\n  </li>\\n</ol>');}]);"]}