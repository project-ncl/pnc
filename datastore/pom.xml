<?xml version="1.0" encoding="UTF-8"?>
<!--

    JBoss, Home of Professional Open Source.
    Copyright 2014-2020 Red Hat, Inc., and individual contributors
    as indicated by the @author tags.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>parent</artifactId>
    <groupId>org.jboss.pnc</groupId>
    <version>2.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>datastore</artifactId>
  <packaging>ejb</packaging>

  <description>Business logic for all DB operations (Implementation of spi:org.jboss.pnc.spi.datastore).</description>

  <dependencies>
    <!-- Project dependencies -->
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>spi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>moduleconfig</artifactId>
    </dependency>

    <!-- Remote dependencies -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>cz.jirutka.rsql</groupId>
      <artifactId>rsql-parser</artifactId>
    </dependency>
    <dependency>
      <groupId>jakarta.enterprise</groupId>
      <artifactId>jakarta.enterprise.cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.annotation</groupId>
      <artifactId>jboss-annotations-api_1.3_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-envers</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate.validator</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>test-common</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.pnc</groupId>
      <artifactId>pnc-mock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wildfly.arquillian</groupId>
      <artifactId>wildfly-arquillian-container-managed</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.extension</groupId>
      <artifactId>arquillian-transaction-jta</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.shrinkwrap.resolver</groupId>
      <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>configure-datasource</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <target>
                <echo message="Configuring datasource" />
                <replace file="${project.build.outputDirectory}/META-INF/persistence.xml" token="@persistence.jta-data-source@" value="${persistence.jta-data-source}" />
                <replace file="${project.build.outputDirectory}/META-INF/persistence.xml" token="@persistence.hibernate.dialect@" value="${persistence.hibernate.dialect}" />
                <replace file="${project.build.outputDirectory}/META-INF/persistence.xml" token="@persistence.hibernate.hbm2ddl.auto@" value="${persistence.hibernate.hbm2ddl.auto}" />
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-ejb-plugin</artifactId>
        <configuration>
          <ejbVersion>3.1</ejbVersion>
          <archive>
            <manifestEntries combine.children="append">
              <Dependencies>
                com.google.guava export meta-inf
              </Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>download-server</id>
      <activation>
        <property>
          <name>eap.zip.url</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>download-and-extract-eap-server</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <target>
                    <!-- If JBOSS_HOME is set it causes obscure errors with CLI in -->
                    <!-- jboss-as-maven-plugin. -->
                    <property environment="env" />
                    <fail message="JBOSS_HOME must not be set" if="env.JBOSS_HOME" />

                    <echo>Preparing EAP application server</echo>
                    <echo>EAP URL ${eap.zip.url}</echo>
                    <fail message="Please specify EAP zip file URL via: -Deap.zip.url=" unless="eap.zip.url" />
                    <mkdir dir="${test.server.unpack.dir}" />
                    <get usetimestamp="true" src="${eap.zip.url}" skipexisting="true" dest="${test.server.unpack.dir}/${app.server}-${jboss.version}.zip" />
                    <unzip src="${test.server.unpack.dir}/${app.server}-${jboss.version}.zip" dest="${test.server.unpack.dir}/" overwrite="true" />

                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>configure-test-container</id>
      <activation>
        <property>
          <name>eap.zip.url</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.hsqldb</groupId>
          <artifactId>hsqldb</artifactId>
          <scope>test</scope>
          <classifier>jdk8debug</classifier>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-server</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <jbossHome>${test.server.build.dir}</jbossHome>
                  <java-opts>
                    <java-opt>--add-modules=java.se</java-opt>
                  </java-opts>
                </configuration>
              </execution>
              <execution>
                <id>deploy-hsql-jdbc-driver</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy-artifact</goal>
                </goals>
                <configuration>
                  <groupId>org.hsqldb</groupId>
                  <artifactId>hsqldb</artifactId>
                  <classifier>jdk8debug</classifier>
                  <!--<name>hsqldb-jdk8debug.jar</name>-->
                </configuration>
              </execution>
              <execution>
                <id>add-hsql-datasource</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>add-resource</goal>
                </goals>
                <configuration>
                  <address>subsystem=datasources,data-source=java:jboss/datasources/NewcastleTestDS</address>
                  <resources>
                    <resource>
                      <properties>
                        <jndi-name>java:jboss/datasources/NewcastleTestDS</jndi-name>
                        <enabled>true</enabled>
                        <connection-url>jdbc:hsqldb:mem:newcastletestmemdb</connection-url>
                        <driver-class>org.hsqldb.jdbc.JDBCDriver</driver-class>
                        <driver-name>hsqldb-2.4.1-jdk8debug.jar</driver-name>
                        <user-name>sa</user-name>
                        <password>sa</password>
                      </properties>
                    </resource>
                  </resources>
                </configuration>
              </execution>
              <execution>
                <id>change-logging-level</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <batch>true</batch>
                    <commands>
                      <command>
                        /subsystem=logging/logger=org.jboss.pnc:add
                      </command>
                      <command>
                        /subsystem=logging/logger=org.jboss.pnc:change-log-level(level=DEBUG)
                      </command>
                      <command>
                        /subsystem=logging/logger=org:add(level=INFO)
                      </command>
                      <command>
                        /subsystem=logging/console-handler=CONSOLE:change-log-level(level=TRACE)
                      </command>
                      <command>
                        /subsystem=logging/root-logger=ROOT:change-root-log-level(level=TRACE)
                      </command>
                      <command>
                        /subsystem=logging/logger=org.jboss.pnc.datastore:add(level=TRACE)
                      </command>
                      <!--command>
                        /subsystem=logging/logger=org.hibernate:add(level=DEBUG)
                      </command>
                      <command>
                        /subsystem=logging/logger=org.hibernate.type:add(level=TRACE)
                      </command-->
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
              <execution>
                <id>shutdown-server</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>shutdown</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>
</project>
